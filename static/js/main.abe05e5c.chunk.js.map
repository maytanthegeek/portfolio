{"version":3,"sources":["serviceWorker.ts","components/Home/Home.tsx","theme.ts","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Home","props","introFirst","introSecond","introThird","in","active","React","createRef","WOW","live","init","this","current","addEventListener","nextAnimate","nextElem","setState","className","ref","data-wow-duration","style","background","height","width","Component","lightTheme","responsiveFontSizes","createMuiTheme","palette","type","primary","main","grey","darkTheme","useStyles","makeStyles","createStyles","title","flexGrow","App","useState","darkState","setDarkState","classes","ThemeProvider","theme","AppBar","position","Toolbar","Typography","variant","IconButton","onClick","BrightnessHigh","BrightnessLow","exact","path","component","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.abe05e5c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React, { Component } from 'react';\nimport { Scroller, Section } from 'react-fully-scrolled';\nimport WOW from 'wowjs';\nimport 'animate.css/animate.min.css';\nimport './Home.css';\n\nexport default class Home extends Component {\n  introFirst;\n\n  introSecond;\n\n  introThird;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      introFirst: {\n        in: true,\n        active: true,\n      },\n      introSecond: {\n        in: true,\n        active: false,\n      },\n      introThird: {\n        in: true,\n        active: false,\n      },\n    };\n    this.introFirst = React.createRef();\n    this.introSecond = React.createRef();\n    this.introThird = React.createRef();\n  }\n\n  componentDidMount() {\n    const wow = new WOW.WOW({\n      live: false,\n    });\n    wow.init();\n    this.introFirst.current.addEventListener('animationend', () => { this.nextAnimate('second'); });\n    this.introSecond.current.addEventListener('animationend', () => { this.nextAnimate('third'); });\n    this.introThird.current.addEventListener('animationend', () => { this.nextAnimate('first'); });\n  }\n\n  // Very crude\n  nextAnimate(nextElem) {\n    switch (nextElem) {\n      case 'second':\n        if (this.state.introFirst.in) {\n          this.setState({\n            introFirst: {\n              in: false,\n              active: true,\n            },\n          });\n        } else {\n          this.setState({\n            introFirst: {\n              in: true,\n              active: false,\n            },\n            introSecond: {\n              in: true,\n              active: true,\n            },\n          });\n        }\n        break;\n      case 'third':\n        if (this.state.introSecond.in) {\n          this.setState({\n            introSecond: {\n              in: false,\n              active: true,\n            },\n          });\n        } else {\n          this.setState({\n            introSecond: {\n              in: true,\n              active: false,\n            },\n            introThird: {\n              in: true,\n              active: true,\n            },\n          });\n        }\n        break;\n      case 'first':\n        if (this.state.introThird.in) {\n          this.setState({\n            introThird: {\n              in: false,\n              active: true,\n            },\n          });\n        } else {\n          this.setState({\n            introThird: {\n              in: true,\n              active: false,\n            },\n            introFirst: {\n              in: true,\n              active: true,\n            },\n          });\n        }\n        break;\n      default: break;\n    }\n  }\n\n  render() {\n    return (\n      <Scroller>\n        <Section>\n          <div className=\"home-banner\">\n            <div>\n              <div ref={this.introFirst} className={`wow intro-text ${this.state.introFirst.in ? 'bounceIn ' : 'bounceOut '}${this.state.introFirst.active ? 'active' : 'inactive'}`} data-wow-duration=\"3s\">\n                I AM TANMAY\n              </div>\n              <div ref={this.introSecond} className={`wow intro-text ${this.state.introSecond.in ? 'bounceIn ' : 'bounceOut '}${this.state.introSecond.active ? 'active' : 'inactive'}`} data-wow-duration=\"3s\">\n                I MAKE PROGRAMS LOOK GOOD\n              </div>\n              <div ref={this.introThird} className={`wow intro-text ${this.state.introThird.in ? 'bounceIn ' : 'bounceOut '}${this.state.introThird.active ? 'active' : 'inactive'}`} data-wow-duration=\"3s\">\n                AND A BIT INTELLIGENT\n              </div>\n            </div>\n          </div>\n        </Section>\n        <Section>\n          <div style={{ background: 'green', height: '100%', width: '100%' }} />\n        </Section>\n        <Section>\n          <div style={{ background: 'blue', height: '100%', width: '100%' }} />\n        </Section>\n      </Scroller>\n    );\n  }\n}\n","import { createMuiTheme, responsiveFontSizes, makeStyles, createStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\n/**\n * Light Theme\n */\nexport const lightTheme = responsiveFontSizes(createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: grey[500],\n    },\n  },\n}));\n\n/**\n * Dark Theme\n */\nexport const darkTheme = responsiveFontSizes(createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: grey[900],\n    },\n  },\n}));\n\nexport const useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      flexGrow: 1,\n    }\n  }),\n);\n","import './App.css';\nimport {\n  AppBar, IconButton, ThemeProvider, Toolbar, Typography,\n} from '@material-ui/core';\nimport { BrightnessHigh, BrightnessLow } from '@material-ui/icons';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Home from './components/Home/Home';\nimport { darkTheme, lightTheme, useStyles } from './theme';\n\nexport default function App() {\n  const [darkState, setDarkState] = useState(true);\n  const classes = useStyles();\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return (\n    <ThemeProvider theme={darkState ? darkTheme : lightTheme}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            My Home\n          </Typography>\n          <IconButton onClick={handleThemeChange}>\n            {darkState ? <BrightnessHigh /> : <BrightnessLow />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          {/* <Route exact path=\"/about\" component={About}></Route> */}\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}